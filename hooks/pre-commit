#!/usr/bin/env bash

source ~/.dotfiles/functions/bash_support.sh
source ~/.dotfiles/functions/git_support.sh

git_system && exit 0

if [[ -z $(git_modified) ]]; then
  exit 0
fi

exit_code=0

if [[ -f .eslintrc ]] || [[ -f .eslintrc.js ]] || [[ -f .rubocop.yml ]] || [[ -f .spellr.yml ]]; then
  git_fake_auto_stash
else
  exit 0
fi

if [[ -f .eslintrc ]] || [[ -f .eslintrc.js ]]; then
  js_files=$(git_modified .js .jsx .ts .tsx)
  if [[ ! -z $js_files ]]; then
    echodo node_modules/.bin/eslint --fix $js_files
    git --no-pager diff $js_files
    [[ -z "$(git diff $js_files)" ]] || exit_code=1
  fi
fi

if [[ -f .rubocop.yml ]]; then
  rb_files=$(git_modified .rb .jbuilder .builder Gemfile .rake)
  if [[ ! -z $rb_files ]]; then
    if [[ -z "$(bundle exec rubocop --help | grep -F -e --display-only-fail-level-offenses)" ]]; then
      echodo bundle exec rubocop -a --force-exclusion --color --fail-level=C $rb_files || exit 1
    else
      echodo bundle exec rubocop -a --force-exclusion --color --display-only-fail-level-offenses --fail-level=C $rb_files || exit 1
    fi
    git --no-pager diff $rb_files
    [[ -z "$(git diff $rb_files)" ]] || exit_code=1
  fi
fi

if [[ -f .spellr.yml ]]; then
  echodo bundle exec spellr $(git_modified) || exit_code=1
fi

exit $exit_code

